// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using SIMIKO.App.Server.Models;

namespace SIMIKO.App.Server.Data;

public partial class CaringDBContext : DbContext
{
    public CaringDBContext(DbContextOptions<CaringDBContext> options)
        : base(options)
    {
    }

    public virtual DbSet<JenisAktivitas> JenisAktivitas { get; set; }

    public virtual DbSet<JenisKompetensi> JenisKompetensi { get; set; }

    public virtual DbSet<JenisModul> JenisModul { get; set; }

    public virtual DbSet<JenisSKompetensi> JenisSKompetensi { get; set; }

    public virtual DbSet<JenisTahapan> JenisTahapan { get; set; }

    public virtual DbSet<tblAssesmentUser> tblAssesmentUser { get; set; }

    public virtual DbSet<tblEvaluasi> tblEvaluasi { get; set; }

    public virtual DbSet<tblHardKompetensi> tblHardKompetensi { get; set; }

    public virtual DbSet<tblHasilAssesment> tblHasilAssesment { get; set; }

    public virtual DbSet<tblIDP> tblIDP { get; set; }

    public virtual DbSet<tblJabTarget> tblJabTarget { get; set; }

    public virtual DbSet<tblJabatan> tblJabatan { get; set; }

    public virtual DbSet<tblJurnal> tblJurnal { get; set; }

    public virtual DbSet<tblKompetensiCoaching> tblKompetensiCoaching { get; set; }

    public virtual DbSet<tblLogJurnal> tblLogJurnal { get; set; }

    public virtual DbSet<tblMentorPeriode> tblMentorPeriode { get; set; }

    public virtual DbSet<tblPeriode> tblPeriode { get; set; }

    public virtual DbSet<tblRenbang> tblRenbang { get; set; }

    public virtual DbSet<tblRole> tblRole { get; set; }

    public virtual DbSet<tblSoftKompetensi> tblSoftKompetensi { get; set; }

    public virtual DbSet<tblUser> tblUser { get; set; }

    public virtual DbSet<tblUserBusiness> tblUserBusiness { get; set; }

    public virtual DbSet<tbl_Activity> tbl_Activity { get; set; }

    public virtual DbSet<tbl_pegawaiAktif> tbl_pegawaiAktif { get; set; }

    public virtual DbSet<tbl_pegawaiEksternal> tbl_pegawaiEksternal { get; set; }

    public virtual DbSet<tbl_versi> tbl_versi { get; set; }

    public virtual DbSet<v_PegawaiAll> v_PegawaiAll { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.UseCollation("Latin1_General_CI_AS");

        modelBuilder.Entity<JenisKompetensi>(entity =>
        {
            entity.Property(e => e.ID).ValueGeneratedNever();
            entity.Property(e => e.IDmodul).HasDefaultValue(1);
        });

        modelBuilder.Entity<JenisSKompetensi>(entity =>
        {
            entity.Property(e => e.IDmodul).HasDefaultValue(1);
        });

        modelBuilder.Entity<tblAssesmentUser>(entity =>
        {
            entity.ToTable(tb => tb.HasTrigger("trg_temp_AssessmentUser"));

            entity.Property(e => e.JenisAsses).HasDefaultValue(1);

            entity.HasOne(d => d.IDuserNavigation).WithMany(p => p.tblAssesmentUser).HasConstraintName("FK_tblAssesmentUser_tblUser");
        });

        modelBuilder.Entity<tblHasilAssesment>(entity =>
        {
            entity.ToTable(tb => tb.HasTrigger("trg_temp_AssesmentUser"));

            entity.HasOne(d => d.IDKompetensiNavigation).WithMany(p => p.tblHasilAssesment).HasConstraintName("FK_tblHasilAssesment_tblSoftKompetensi");

            entity.HasOne(d => d.IDassessmentNavigation).WithMany(p => p.tblHasilAssesment)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK_tblHasilAssesment_tblAssesmentUser");

            entity.HasOne(d => d.IDjenisKompetensiNavigation).WithMany(p => p.tblHasilAssesment).HasConstraintName("FK_tblHasilAssesment_JenisSKompetensi");
        });

        modelBuilder.Entity<tblIDP>(entity =>
        {
            entity.ToTable(tb => tb.HasTrigger("trg_temp_IDPjabTarget2"));

            entity.Property(e => e.JenisIDP).HasDefaultValue(1);

            entity.HasOne(d => d.IDperiodeNavigation).WithMany(p => p.tblIDP).HasConstraintName("FK_tblIDP_tblPeriode");
        });

        modelBuilder.Entity<tblJabTarget>(entity =>
        {
            entity.ToTable(tb => tb.HasTrigger("trg_temp_IDPjabTarget"));

            entity.HasOne(d => d.JenisSKompetensiNavigation).WithMany(p => p.tblJabTarget).HasConstraintName("FK_tblJabTarget_JenisSKompetensi");

            entity.HasOne(d => d.KodeJabatanNavigation).WithMany(p => p.tblJabTarget)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK_tblJabTarget_tblJabatan");

            entity.HasOne(d => d.PeriodeNavigation).WithMany(p => p.tblJabTarget).HasConstraintName("FK_tblJabTarget_tblPeriode");

            entity.HasOne(d => d.SoftKompetensiNavigation).WithMany(p => p.tblJabTarget)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK_tblJabTarget_tblSoftKompetensi");
        });

        modelBuilder.Entity<tblJabatan>(entity =>
        {
            entity.Property(e => e.KodeJabatan).ValueGeneratedNever();
        });

        modelBuilder.Entity<tblJurnal>(entity =>
        {
            entity.HasOne(d => d.IDrenbangNavigation).WithMany(p => p.tblJurnal)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK_tblJurnal_tblRenbang");
        });

        modelBuilder.Entity<tblKompetensiCoaching>(entity =>
        {
            entity.Property(e => e.Saved).HasDefaultValue(true);

            entity.HasOne(d => d.IDidpNavigation).WithMany(p => p.tblKompetensiCoaching)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK_tblKompetensiCoaching_tblIDP");
        });

        modelBuilder.Entity<tblLogJurnal>(entity =>
        {
            entity.HasOne(d => d.IDjurnalNavigation).WithMany(p => p.tblLogJurnal)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK_tblLogJurnal_tblJurnal");
        });

        modelBuilder.Entity<tblMentorPeriode>(entity =>
        {
            entity.HasKey(e => e.ID).HasName("PK__tblMento__3214EC270278A8C1");
        });

        modelBuilder.Entity<tblRenbang>(entity =>
        {
            entity.HasOne(d => d.IDidpNavigation).WithMany(p => p.tblRenbang)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK_tblRenbang_tblIDP");
        });

        modelBuilder.Entity<tblSoftKompetensi>(entity =>
        {
            entity.HasKey(e => e.ID).HasName("PK_tblRefKompetensi");

            entity.Property(e => e.Jenis).HasDefaultValue(1);
        });

        modelBuilder.Entity<tblUser>(entity =>
        {
            entity.ToTable(tb => tb.HasTrigger("trg_temp_PegawaiAktif"));

            entity.Property(e => e.Aktif).HasDefaultValue(true);

            entity.HasOne(d => d.Role).WithMany(p => p.tblUser)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK_tblUser_tblRole");
        });

        modelBuilder.Entity<tblUserBusiness>(entity =>
        {
            entity.HasKey(e => e.ID).HasName("PK_tblAccess");

            entity.HasOne(d => d.IDuserNavigation).WithMany(p => p.tblUserBusiness)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK_tblUserBusiness_tblUser");
        });

        modelBuilder.Entity<v_PegawaiAll>(entity =>
        {
            entity.ToView("v_PegawaiAll");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}